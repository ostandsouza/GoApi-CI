{"version":3,"sources":["context/InitialContext.ts","components/Suite.tsx","components/AppSidebar.tsx","components/Card.tsx","components/Progress.tsx","components/Pagination.tsx","components/Reports.tsx","components/Dashboard.tsx","components/AppNavbar.tsx","context/GlobalState.tsx","App.tsx","index.tsx"],"names":["React","createContext","ConnectionStatus","Collections","IssueMap","Selected","Testcases","Fail","Pass","Skip","updateValue","data","updateSelected","currentCollection","updateTestcases","testcases","Suite","_ref","val","handleEvent","filterString","collectionData","useContext","InitialContext","collectionName","Array","count","jData","_useState","useState","_useState2","Object","slicedToArray","getCollection","setcollectionList","inputText","useRef","createRef","memoizedValue","useMemo","current","splice","length","i","map","item","console","log","refFunc","useEffect","toString","search","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","wrap","_context2","prev","next","Promise","all","_ref3","_callee","coll","index","res","_context","axios","post","api","sent","status","split","t0","concat","stop","_x","_x2","apply","this","arguments","abrupt","then","filteredCollection","filter","collect","toLowerCase","indexOf","react_default","createElement","Fragment","ListGroup","ListGroupItem","onClick","event","key","className","ListGroupItemHeading","Badge","ListGroupItemText","some","issue","Key","Value","issueList","color","href","e","endpoint","currentTarget","innerText","finalUrl","window","open","openUrl","id","type","aria-label","getAttribute","value","handleDelete","aria-hidden","Button","button","document","getElementsByClassName","classList","includes","remove","add","textArea","toggleButton","fa_index_esm","placeholder","name","onKeyDown","keyCode","shiftKey","preventDefault","push","onEnterPress","ref","saveButton","style","margin","closeButton","AppSidebar","getSearchList","setSearchList","inputFilter","src","maxWidth","maxHeight","paddingLeft","paddingTop","title","target","esm","Provider","size","index_esm","InputGroup","onChange","position","marginLeft","marginTop","overflow","width","height","components_Suite","Card","Icon","join","Progress","props","sqSize","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","percentage","circleframes","keyframes","_templateObject","animatedframes","_templateObject2","StyleCirlce","styled","_templateObject3","AnimatedCirlce","_templateObject4","cx","cy","r","transform","strokeDasharray","strokeDashoffset","x","y","dy","textAnchor","Pagination","postPerPage","totalPosts","paginate","pageNumber","ceil","number","Reports","reports","toggleSelected","previewButton","file","setTimeout","Table","striped","reverse","report","time","device","RunType","version","TotalTestCases","issues","functionalReport","uiReport","Dashboard","TestcaseData","getReport","setReport","failures","passing","skipped","inTotal","_useState3","_useState4","getPercentage","setPercentage","_useState5","_useState6","initPercentage","setinitPercentage","_useState7","_useState8","getresult","setresult","resp","undefined","FailedTestCases","PassedTestCases","SkippedTestCases","Number","parseInt","round","floor","_useState9","_useState10","getType","_useState11","_useState12","currentPage","setCurrentPage","_useState13","_useState14","itemPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","components_Card","FaCheck","FaTimes","FaExclamation","components_Progress","components_Reports","checked","contains","els","components_Pagination","pagenumber","AppNavbar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","isActive","state","notify","activeCollection","context","bind","assertThisInitialized","components_AppSidebar","components_Dashboard","Navbar","dark","expand","NavLink","float","fontSize","display","data-letter","data-toggle","data-target","aria-controls","aria-expanded","Component","contextType","GlobalState","collection","setIssueMap","setConnectionStatus","setCollections","setSelected","setTestcases","conn","get","_callee3","connectionString","_context3","url","connect","_ref4","_callee4","lists","_context4","other","newColl","toConsumableArray","startsWith","children","App","context_GlobalState","components_AppNavbar","userName","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.09e2a49a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { object } from 'prop-types';\r\n\r\nexport default React.createContext({\r\n    //ConnectionString: '',\r\n    ConnectionStatus: false,\r\n    Collections: [],\r\n    IssueMap: [],\r\n    Selected: '',\r\n    Testcases: {Fail:0, Pass:0, Skip:0},\r\n    updateValue : (data:any) => {},\r\n    updateSelected : (currentCollection:string) => {},\r\n    updateTestcases : (testcases:any) => {}\r\n})\r\n","import React, { useContext, FC, useEffect, ReactComponentElement, useState, useRef, useMemo } from 'react'\r\nimport '../App.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    ListGroupItemHeading,\r\n    ListGroupItemText,\r\n    Button,\r\n    Badge\r\n} from 'reactstrap'\r\nimport InitialContext from '../context/InitialContext';\r\nimport { FaStickyNote } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nconst Suite: FC<IProps> = ({handleEvent, filterString}) => {\r\n    const collectionData= useContext(InitialContext)\r\n    var collectionName: Array<string> = new Array();\r\n    var count: Array<string> = new Array();\r\n    var jData: any = {};\r\n    var data: IKeys; \r\n    var val: any[];\r\n\r\n    const [getCollection, setcollectionList] = useState<any>('')\r\n    const inputText = useRef<any>([React.createRef(), React.createRef()]);\r\n\r\n    const refFunc = () => {\r\n        inputText.current = inputText.current.splice(0, collectionData.Collections.length);\r\n        for(let i = 0; i< collectionData.Collections.length; i++) {\r\n            inputText.current[i] = inputText.current[i] || React.createRef();\r\n        }\r\n        inputText.current = inputText.current.map((item:any) => item || React.createRef());\r\n        console.log(\"useEffect log:\", inputText.current);\r\n        if(typeof inputText.current !== 'undefined' && inputText.current.length > 0)\r\n        console.log(\"single log:\", inputText.current[0].current);\r\n        return inputText\r\n    }   \r\n\r\n    const memoizedValue = useMemo(() =>refFunc(), [inputText.current]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect:\");\r\n        if(!collectionData.Collections.toString().search(\"file\")){\r\n        const data = async() : Promise<any> =>{\r\n            await Promise.all(collectionData.Collections.map(async (coll:string, index:number) => {\r\n                try {\r\n                    const res = await axios.post('/api/count',{\"api\": coll}) \r\n                    collectionName[index] = coll\r\n                    count[index]= res.data.status.split(':')[1]\r\n                } catch (e) {\r\n                    console.log(`Axios request failed: ${e}`);\r\n                } \r\n              }));\r\n        \r\n        return [collectionName,count]\r\n    }\r\n        data().then(res =>{\r\n            console.log(\"len\",res[0].length);\r\n            console.log(\"len\",res[1].length);\r\n            for(var i=0;i<res[0].length;i++){\r\n                jData[res[0][i]] = res[1][i];\r\n            }\r\n            console.log(\"jData\",jData)\r\n            setcollectionList(jData)\r\n        })\r\n    }\r\n    },[collectionData.Collections])\r\n\r\n     const openUrl = (e:React.MouseEvent<HTMLElement>)=>{\r\n        var endpoint:string = e.currentTarget.innerText\r\n        console.log(endpoint)\r\n        var uri:string = 'http://upg-jira.int.thomsonreuters.com/browse/'\r\n        var finalUrl = uri.concat(endpoint)\r\n        //window.location.href = finalUrl;\r\n        window.open(finalUrl,\"_newtab\" );    \r\n      }\r\n\r\n      const handleDelete = (e:React.MouseEvent<HTMLElement>, currentCollection:any)=>{\r\n        var endpoint:any = e.currentTarget.getAttribute(\"id\")\r\n        val = collectionData.IssueMap\r\n        collectionData.IssueMap.map(issue => {data = issue as IKeys\r\n            if(data.Key == currentCollection){\r\n                data.Value.map((value:string,index:number)=>{\r\n                if(value == endpoint){\r\n                    data.Value.splice(index,1)\r\n                }   \r\n                })\r\n                collectionData.updateValue(val)\r\n            }\r\n        })\r\n      }\r\n\r\n      \r\n      const toggleButton = (e:React.MouseEvent<HTMLElement>) =>{\r\n          var index:any = e.currentTarget.getAttribute(\"id\")\r\n        //e.currentTarget.style.visibility='hidden'\r\n        var button = document.getElementsByClassName(\"note note-edit\");\r\n        for (var i = 0; i < button.length; i++) {\r\n            if(button[i].classList.value.includes('inactive'))\r\n                button[i].classList.remove('inactive')\r\n            button[i].classList.add('active')\r\n        }\r\n        button[index].classList.remove(\"active\")\r\n        button[index].classList.add('inactive')\r\n\r\n        var textArea = document.getElementsByClassName(\"note note-editing\");\r\n        for (var i = 0; i < textArea.length; i++) {\r\n            if(textArea[i].classList.value.includes('active'))\r\n                textArea[i].classList.remove('active')\r\n            textArea[i].classList.add('inactive')\r\n        }\r\n        textArea[index].classList.remove(\"inactive\")\r\n        textArea[index].classList.add('active')\r\n        }   \r\n\r\n        const closeButton = (e:React.MouseEvent<HTMLElement>) =>{\r\n            var index:any = e.currentTarget.getAttribute(\"id\")\r\n            var button = document.getElementsByClassName(\"note note-edit\");\r\n            var textArea = document.getElementsByClassName(\"note note-editing\");\r\n            textArea[index].classList.remove(\"active\")\r\n            textArea[index].classList.add('inactive')\r\n            button[index].classList.remove(\"active\")\r\n            button[index].classList.add('active')\r\n        }\r\n\r\n        const saveButton = (e:React.FormEvent<HTMLAnchorElement>, currentCollection:any) =>{\r\n            e.preventDefault();\r\n            var index:any = e.currentTarget.getAttribute(\"id\")\r\n            //val = [...getIssueList]\r\n            val = collectionData.IssueMap\r\n            collectionData.IssueMap.map(issue => {data = issue as IKeys\r\n                if(data.Key == currentCollection){\r\n                    data.Value.push(memoizedValue.current[index].current.value)\r\n                    collectionData.updateValue(val)\r\n                }\r\n            })\r\n            var button = document.getElementsByClassName(\"note note-edit\");\r\n            var textArea = document.getElementsByClassName(\"note note-editing\");\r\n            textArea[index].classList.remove(\"active\")\r\n            textArea[index].classList.add('inactive')\r\n            button[index].classList.remove(\"active\")\r\n            button[index].classList.add('active')\r\n            memoizedValue.current[index].current.value = ''\r\n        }\r\n\r\n        const onEnterPress = (e:any, currentCollection:any) => {\r\n            var index:any = e.currentTarget.getAttribute(\"id\")\r\n            if(e.keyCode == 13 && e.shiftKey == false) {\r\n              e.preventDefault();\r\n              val = collectionData.IssueMap\r\n              collectionData.IssueMap.map(issue => {data = issue as IKeys\r\n                  if(data.Key == currentCollection){\r\n                      data.Value.push(memoizedValue.current[index].current.value)\r\n                      collectionData.updateValue(val)\r\n                  }\r\n              })\r\n              var button = document.getElementsByClassName(\"note note-edit\");\r\n              var textArea = document.getElementsByClassName(\"note note-editing\");\r\n              textArea[index].classList.remove(\"active\")\r\n              textArea[index].classList.add('inactive')\r\n              button[index].classList.remove(\"active\")\r\n              button[index].classList.add('active')\r\n              memoizedValue.current[index].current.value = ''\r\n            }\r\n          }\r\n\r\n          let filteredCollection = collectionData.Collections.filter((collect:string) =>{\r\n            return collect.toLowerCase().indexOf(filterString.toLowerCase()) !== -1\r\n        })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListGroup>\r\n            {filteredCollection && filteredCollection.map((coll,index:any) =>\r\n            <ListGroupItem onClick={(event)=>handleEvent(event,coll)} key={coll}>\r\n            <span className=\"selected\">\r\n                    <span className=\"triangle\"></span>\r\n                    <i className=\"fa fa-check\"></i>\r\n            </span>\r\n            <div className=\"system-lists\"></div>\r\n            <ListGroupItemHeading>{coll}<Badge className=\"badge-pill\">{getCollection[coll]}</Badge></ListGroupItemHeading>\r\n            <ListGroupItemText>\r\n            {collectionData.IssueMap && collectionData.IssueMap.some(issue => {data = issue as IKeys\r\n                        if(data.Key == coll)\r\n                        return val = data.Value\r\n                        else \r\n                        val = []})}\r\n\r\n            {val && val.map(issueList => \r\n                <Badge className=\"badge-pill\" color=\"secondary\" key={issueList}>\r\n                    <Badge  href=\"javascript:void(0)\" onClick={(event)=>openUrl(event)}>\r\n                            {issueList}</Badge>\r\n                <button id={issueList} type=\"button\" className=\"close\" aria-label=\"Dismiss\" onClick={(event)=>handleDelete(event,coll)}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                </Badge>\r\n                )}  \r\n            </ListGroupItemText>\r\n            <div className=\"note-container\">\r\n                <p className=\"note note-edit active\">\r\n                    <Button className=\"btn-group-xs\" id={index} onClick={(event)=>toggleButton(event)}><FaStickyNote/>Add Issue</Button>\r\n                </p>\r\n                <div className=\"note note-editing inactive\">\r\n                {/* <form ref={el => this.myFormRef = el} onSubmit={this.searchClick} autoComplete=\"off\"> */}\r\n                <textarea id={index} className=\"IssueText\" placeholder=\"Add new issue...\" name=\"NewIssue\" onKeyDown={(event)=>onEnterPress(event, coll)} ref={inputText.current[index]}></textarea>\r\n                <a href=\"javascript:void(0)\" className=\"btn btn-primary btn-group-xs\" id={index} onClick={(event)=>saveButton(event,coll)} style={{margin:'4px'}}>Save</a>\r\n                <a href=\"javascript:void(0)\" className=\"btn btn-primary btn-group-xs\" id={index} onClick={(event)=>closeButton(event)}>Cancel</a>\r\n                {/* </form> */}\r\n                </div>\r\n            </div>\r\n            </ListGroupItem>\r\n            )}\r\n            </ListGroup>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Suite\r\n\r\ninterface IKeys { \r\n    Key: string,\r\n    Value: any[] \r\n}\r\n\r\ninterface IProps {\r\n    handleEvent: any\r\n    filterString: string\r\n}","import React, { FC, useState, useRef } from 'react'\r\nimport '../App.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    ListGroupItemHeading,\r\n    ListGroupItemText,\r\n    Button,\r\n    Badge\r\n} from 'reactstrap'\r\nimport { DiJira, DiAtlassian } from \"react-icons/di\";\r\nimport { FaGitlab, FaJenkins } from \"react-icons/fa\";\r\nimport { MdAccountCircle, MdNotifications, MdNotificationsOff } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport Suite from './Suite';\r\n\r\n\r\nconst AppSidebar: FC<any> = ({handleEvent}) => {\r\n    const [getSearchList, setSearchList] = useState<string>('')\r\n    const inputFilter = useRef<HTMLInputElement>(null);\r\n\r\n    const updateSearch = () =>{\r\n        setSearchList(inputFilter.current!.value)\r\n        console.log(getSearchList)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <nav id=\"sidebar\">\r\n           <br/>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"sidebar-header\">      \r\n                 <div className=\"logo-wrapper waves-light\">\r\n                    <a href=\"#\"><img src={\"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\"} className=\"img-fluid flex-center\" style ={{maxWidth:'70%', maxHeight:'70%', paddingLeft:'80px', paddingTop: '10px'}}></img></a>\r\n                </div>\r\n                 {/* <h3  style={{marginLeft:'1.5em'}}>BOOTSTRAP SIDEBAR</h3> https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg*/}\r\n            </div>\r\n            <br/>\r\n            <p className=\"social-links\">\r\n                <a href=\"http://upg-jira.int.thomsonreuters.com/login.jsp\" title=\"Raise Jira ticket\" className=\"jira\" target=\"_blank\">\r\n                <IconContext.Provider\r\n                value={{ color: 'white', size: '40px' }}>\r\n                <DiJira/>\r\n                </IconContext.Provider>\r\n                </a>\r\n                <a href=\"http://upg-confluence.int.thomsonreuters.com/dologin.action\" title=\"Visit Confluence site\" className=\"confluence\" target=\"_blank\">\r\n                <IconContext.Provider\r\n                value={{ color: 'white', size: '40px' }}>\r\n                <DiAtlassian/>\r\n                </IconContext.Provider>\r\n                </a>\r\n                <a href=\"https://git.sami.int.thomsonreuters.com/users/sign_in\" title=\"Manage GitLab projects\" className=\"gitlab\" target=\"_blank\">\r\n                <IconContext.Provider\r\n                value={{ color: 'white', size: '40px' }}>\r\n                <FaGitlab/>\r\n                </IconContext.Provider>\r\n                </a>\r\n                <a href=\"http://localhost:8080/login?from=%2F\" title=\"Manage Jenkins pipeline\" className=\"jenkins\" target=\"_blank\">\r\n                <IconContext.Provider\r\n                value={{ color: 'white', size: '40px' }}>\r\n                <FaJenkins/>\r\n                </IconContext.Provider>\r\n                </a>\r\n            </p>\r\n\r\n\r\n            <br />\r\n\r\n            <InputGroup>\r\n            <input type='text' id='filters' placeholder='Filter...' ref={inputFilter} value={getSearchList} onChange={updateSearch}/>\r\n            <i className=\"fa fa-search\" style={{position: 'absolute',marginLeft:'30px',marginTop:'10px', color:'#03a9f4'}}></i> \r\n            {/* <InputGroupAddon addonType=\"append\">\r\n                <Button color=\"secondary\"></Button>\r\n            </InputGroupAddon>*/}\r\n            </InputGroup>\r\n\r\n            <br />\r\n            \r\n            {/* <button className=\"btn btn-primary btn-group-xs\" onClick={()=>addCollection()} style={{margin:'4px'}}>ADD</button>\r\n            <button className=\"btn btn-primary btn-group-xs\" onClick={(event)=>deleteCollection(event)}>DELETE</button> */}\r\n            <div className=\"slimScrollDiv\" style={{position: 'relative', overflow: 'auto', width: 'auto',height: '700px'}}>\r\n            <Suite handleEvent={handleEvent} filterString={getSearchList}/>\r\n            </div>\r\n            </nav>\r\n        </React.Fragment>   \r\n    )\r\n}\r\n\r\nexport default AppSidebar\r\n","import React, { FC, useEffect } from 'react'\r\nimport '../App.css';\r\n\r\nconst Card: FC<IClass> = ({type, count, className, Icon}) => {\r\n    return (\r\n        <React.Fragment>\r\n              <div className={[\"info-box\",className, \"hover-expand-effect\"].join(' ')}>\r\n                    <div className=\"icon\">\r\n                    <Icon/>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"text\">{type}</div>\r\n                        <h3 className=\"card-title\">{count}</h3>\r\n                    </div>\r\n                </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Card\r\n\r\ninterface IClass {\r\n    type: string\r\n    count: number,\r\n    className: string,\r\n    Icon: any\r\n}","import React, { FC, useEffect } from 'react'\r\nimport '../App.css';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Progress: FC<any> = (props) => {\r\n    const sqSize = props.sqSize;\r\n    const radius = (props.sqSize - props.strokeWidth) / 2;\r\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\r\n    const dashArray = radius * Math.PI * 2;\r\n    const dashOffset = dashArray - dashArray * props.percentage / 100;\r\n\r\n    const circleframes = keyframes`\r\n    from {\r\n      stroke-dashoffset: ${dashArray};\r\n      }\r\n\r\n    50% {stroke-dashoffset: ${dashOffset};}\r\n      \r\n    to {\r\n      stroke-dashoffset: ${dashOffset};\r\n      }`\r\n\r\n      const animatedframes = keyframes`\r\n      from {\r\n        stroke-dashoffset: ${dashArray};\r\n        }\r\n\r\n      15% {stroke-dashoffset: ${dashArray};}\r\n\r\n      75% {stroke-dashoffset: ${dashOffset-100};}\r\n\r\n      to {\r\n        stroke-dashoffset: ${dashOffset};\r\n        }`\r\n\r\n    const StyleCirlce = styled('circle')`\r\n    stroke: #29c631;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    transition: ${dashOffset} 10s;\r\n    animation-play-state: running;\r\n    -webkit-animation: ${circleframes} 10s infinite;\r\n    animation: ${circleframes} 10s infinite;\r\n    &:hover {\r\n    stroke-dashoffset: ${dashArray}!important;\r\n    -webkit-animation-play-state: paused;\r\n    animation-play-state: paused;\r\n    }\r\n    }`\r\n\r\n    const AnimatedCirlce = styled('circle')`\r\n    stroke: #29c631;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    transition: ${dashOffset} 10s;\r\n    animation-play-state: running;\r\n    -webkit-animation: ${animatedframes} 10s infinite;\r\n    animation: ${animatedframes} 10s infinite;\r\n    &:hover {\r\n    stroke-dashoffset: ${dashArray}!important;\r\n    -webkit-animation-play-state: paused;\r\n    animation-play-state: paused;\r\n    }\r\n    }`\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <svg\r\n        width={props.sqSize}\r\n        height={props.sqSize}\r\n        viewBox={viewBox}>\r\n        <circle\r\n        className=\"circle-outter\"\r\n        cx={props.sqSize / 2}\r\n        cy={props.sqSize / 2}\r\n        r={radius+3}\r\n        strokeWidth={`2px`} />\r\n        {/* <circle\r\n          className=\"circle-background\"\r\n          cx={props.sqSize / 2}\r\n          cy={props.sqSize / 2}\r\n          r={radius}\r\n          strokeWidth={`${props.strokeWidth}px`} /> */}\r\n        <AnimatedCirlce\r\n          className=\"circle-background\"\r\n          cx={props.sqSize / 2}\r\n          cy={props.sqSize / 2}\r\n          r={radius}\r\n          strokeWidth={`5px`} \r\n          transform={`rotate(-90 ${props.sqSize / 2} ${props.sqSize / 2})`}\r\n          style={{\r\n          strokeDasharray: dashArray,\r\n          strokeDashoffset: dashOffset\r\n          }} />\r\n        <StyleCirlce\r\n          className=\"circle-progress\"\r\n          cx={props.sqSize / 2}\r\n          cy={props.sqSize / 2}\r\n          r={radius}\r\n          strokeWidth={`${props.strokeWidth}px`}\r\n          transform={`rotate(-90 ${props.sqSize / 2} ${props.sqSize / 2})`}\r\n          style={{\r\n            strokeDasharray: dashArray,\r\n            strokeDashoffset: dashOffset\r\n          }} />\r\n        <text\r\n          className=\"circle-text\"\r\n          id=\"myTimer\"\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          dy=\".3em\"\r\n          textAnchor=\"middle\">\r\n          {`${props.percentage}%`}\r\n        </text>\r\n        <text\r\n          className=\"circle-sidetext\"\r\n          x=\"50%\"\r\n          y=\"70%\"\r\n          dy=\".3em\"\r\n          textAnchor=\"middle\">\r\n          {`${props.type}`}\r\n          </text>\r\n    </svg>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Progress\r\n","import React, { FC } from 'react'\r\n\r\nconst Pagination: FC<any> = ({postPerPage, totalPosts, paginate}) => {\r\n    const pageNumber:number[]=[]\r\n    console.log(\"TotalPosts\",postPerPage)\r\n    console.log(\"PostPerPage\",totalPosts)\r\n    for(let i=1; i<=Math.ceil(totalPosts/postPerPage); i++){\r\n        pageNumber.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {console.log(\"pageNumber:\",pageNumber)}\r\n                {pageNumber.map(number=>(\r\n                    <li key={number} className='page-item'>\r\n                        <a onClick={()=> paginate(number)} href=\"!#\" className='page-link' style={{marginLeft:'20px'}}>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { FC } from 'react'\r\nimport { Table } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { IReport } from './Dashboard';\r\n\r\nconst Reports:FC<any> = ({reports, toggleSelected}) => {\r\n\r\n    // const downloadButton= async(id:string) =>{\r\n    //     let file:string\r\n    //     try {\r\n    //         console.log(\"id\",id)\r\n    //         const res = await axios.post('/api/download',{\"id\": id}) \r\n    //         file= res.data.status\r\n    //         console.log(\"file\",file)\r\n    //         setTimeout(function(){\r\n    //         var element = document.createElement('a');\r\n    //         //element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent('http://localhost:4100/file'));\r\n    //         element.setAttribute('href', 'http://localhost:4100/file')\r\n    //         element.setAttribute('download', file);\r\n    //         element.setAttribute('target','_blank');\r\n          \r\n    //         element.style.display = 'none';\r\n    //         document.body.appendChild(element);\r\n          \r\n    //         if (document.createEvent) {\r\n    //             var e = document.createEvent('MouseEvents');\r\n    //             e.initEvent('click', true, true);\r\n    //             element.dispatchEvent(e);\r\n    //             return true;\r\n    //         }\r\n          \r\n    //         document.body.removeChild(element);\r\n    //     }, 1000); \r\n    //     } catch (e) {\r\n    //         console.log(`Axios request failed: ${e}`);\r\n    //     } \r\n    // }\r\n\r\n\r\n    const previewButton= async(id:string) =>{\r\n        let file:string\r\n        try {\r\n            console.log(\"id\",id)\r\n            const res = await axios.post('/api/download',{\"id\": id}) \r\n            file= res.data.status\r\n            console.log(\"file\",file)\r\n            setTimeout(function(){\r\n                window.open('http://localhost:4100/file', '_blank')\r\n            }, 1000); \r\n        } catch (e) {\r\n            console.log(`Axios request failed: ${e}`);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table striped style={{marginLeft:'20px'}}>\r\n            <thead>\r\n            <tr>\r\n                <th> </th>\r\n                <th>#</th>\r\n                <th>Time Stamp</th>\r\n                <th>Device</th>\r\n                <th>Run Type</th>\r\n                <th>Version</th>\r\n                <th>Executed Cases</th>\r\n                <th>Issues Found</th>\r\n                <th>Functional Report</th>\r\n                <th>UI Report</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {reports && reports.reverse().map((report:IReport,index:any) =>\r\n            // {console.log(\"getReport\",report)}\r\n            <tr key={index}>\r\n            <td><input type=\"radio\" name=\"FirstSelector\" value={index} onClick={(e)=>toggleSelected(e,index)}/></td>\r\n            <td>{index+1}</td>\r\n            <td>{report.time}</td>\r\n            <td>{report.device}</td>\r\n            <td>{report.RunType}</td>\r\n            <td>{report.version}</td>\r\n            <td>{report.TotalTestCases}</td>\r\n            <td>{report.issues}</td>\r\n            <td><a className=\"badge badge-outline-success mr-4 mr-xl-2\" href=\"javascript:void(0)\" onClick={()=>previewButton(report.functionalReport)}>view</a></td>\r\n            <td><a className=\"badge badge-outline-success mr-4 mr-xl-2\" href=\"javascript:void(0)\" onClick={()=>previewButton(report.uiReport)}>view</a></td>\r\n          </tr>\r\n          )}\r\n            </tbody>\r\n          </Table>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","import React, { useState, useEffect, useContext, useMemo } from 'react'\r\nimport { FaTimes, FaCheck, FaExclamation, FaBars } from \"react-icons/fa\";\r\nimport Card from './Card';\r\nimport { IconContext } from 'react-icons';\r\nimport '../App.css';\r\nimport Progress from './Progress';\r\nimport { useHttp } from '../hooks/Http';\r\nimport InitialContext from '../context/InitialContext';\r\nimport Pagination from './Pagination';\r\nimport Reports from './Reports';\r\nimport axios from \"axios\";\r\n\r\nconst Dashboard = () => {\r\n  const TestcaseData= useContext(InitialContext)\r\n  //const [ReportAPI] = useHttp('/api/read',{\"api\": TestcaseData.Selected},[TestcaseData.Selected])\r\n  const [getReport, setReport] = useState<IReport[]>([])\r\n\r\n  //var singleReport: IReport[]\r\n  var failures:number= 0\r\n  var passing:number= 0\r\n  var skipped:number= 0\r\n  var inTotal:number= 0\r\n  const [getPercentage, setPercentage] = useState<INumber>({\r\n    Fail: 0,\r\n    Pass: 0,\r\n    Skip: 0\r\n})\r\nconst [initPercentage, setinitPercentage] = useState<INumber>({\r\n  Fail: 0,\r\n  Pass: 0,\r\n  Skip: 0\r\n})\r\n\r\nconst [getresult, setresult] = useState<INumber>({\r\n  Fail: 0,\r\n  Pass: 0,\r\n  Skip: 0\r\n})\r\n\r\nuseEffect(() => {\r\n  var resp:IReport[]\r\n  if(TestcaseData.Selected!==\"\"){\r\n      const data = async() : Promise<any> =>{\r\n              try {\r\n                resp = await axios.post('/api/read',{\"api\": TestcaseData.Selected}) \r\n              } catch (e) {\r\n                  console.log(`Axios request failed: ${e}`);\r\n              } \r\n              return resp\r\n          };\r\n          data().then(res=>{\r\n            console.log(\"data status\",res.data.status.length)\r\n            if(res.data.status.length > 0)\r\n              setReport(res.data.status)\r\n            else\r\n              setReport([])\r\n          })\r\n      }\r\n},[TestcaseData.Selected])\r\n  \r\n  // useEffect(() => {\r\n  //   if(ReportAPI.status.length > 0){\r\n  //     setReport(ReportAPI.status)\r\n  //     console.log(\"asdabcd\")\r\n  //   }\r\n  //   else {\r\n  //     setReport([])\r\n  //     console.log(\"abcd\")\r\n  //   }\r\n  // },[ReportAPI])\r\n\r\n  useEffect(() => {\r\n    if(typeof getReport !== 'undefined' && getReport.length > 0){\r\n    for (var i = 0; i < getReport.length; i++) {\r\n     if(getReport[i].FailedTestCases !== undefined  && getReport[i].PassedTestCases !== undefined && getReport[i].SkippedTestCases !== undefined && getReport[i].TotalTestCases !== undefined){\r\n      failures+=Number.parseInt(getReport[i].FailedTestCases.toString())\r\n      passing+=Number.parseInt(getReport[i].PassedTestCases.toString())\r\n      skipped+=Number.parseInt(getReport[i].SkippedTestCases.toString())\r\n      inTotal+=Number.parseInt(getReport[i].TotalTestCases.toString())\r\n     }\r\n  }\r\n  setresult({Fail:failures,Pass:passing,Skip:skipped})\r\n  TestcaseData.updateTestcases({Fail:failures,Pass:passing,Skip:skipped})\r\n  setPercentage({Fail:Math.round((failures/inTotal)*100),Pass:Math.round((passing/inTotal)*100),Skip:Math.round((skipped/inTotal)*100)})\r\n  setinitPercentage({Fail:Math.floor((failures/inTotal)*100),Pass:Math.floor((passing/inTotal)*100),Skip:Math.floor((skipped/inTotal)*100)})\r\n  }\r\n  else{\r\n    setresult({Fail:0,Pass:0,Skip:0})\r\n    TestcaseData.updateTestcases({Fail:0,Pass:0,Skip:0})\r\n    setinitPercentage({Fail:0,Pass:0,Skip:0})\r\n    setPercentage({Fail:0,Pass:0,Skip:0})\r\n  }\r\n  },[getReport])\r\n\r\n    const [getType, setType] = useState<IObject>({\r\n        Fail: 'Failed Testcases',\r\n        Pass: 'Passed Testcases',\r\n        Skip: 'Skipped Testcases'\r\n    })\r\n\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n    const [itemPerPage, setItemPerPage] = useState<number>(10)\r\n    const indexOfLastItem = currentPage * itemPerPage\r\n    const indexOfFirstItem = indexOfLastItem - itemPerPage\r\n    const currentItems = getReport.slice(indexOfFirstItem,indexOfLastItem)\r\n\r\n    const paginate = (pagenumber:number) => {\r\n      setCurrentPage(pagenumber)\r\n    }\r\n\r\n    const toggleSelected = (e: React.ChangeEvent<HTMLInputElement>, index:number) =>{\r\n      if(e.target.checked && !e.currentTarget.classList.contains(\"checked\")){\r\n          // console.log(\"reports\",currentItems[index]);\r\n          e.currentTarget.classList.add('checked');\r\n          console.log(\"asdasd\",e.target)\r\n          TestcaseData.updateTestcases({Fail:currentItems[index].FailedTestCases,Pass:currentItems[index].PassedTestCases,Skip:currentItems[index].SkippedTestCases})\r\n          setPercentage({Fail:Math.floor((currentItems[index].FailedTestCases/currentItems[index].TotalTestCases)*100),Pass:Math.floor((currentItems[index].PassedTestCases/currentItems[index].TotalTestCases)*100),Skip:Math.floor((currentItems[index].SkippedTestCases/currentItems[index].TotalTestCases)*100)})\r\n\r\n      }\r\n      else{\r\n          var els = document.getElementsByClassName(\"tick checked\");\r\n          console.log(\"asdasd\",els)\r\n          // for (var i = 0; i < els.length; i++) {\r\n          //     els[i].classList.remove('checked')\r\n          //     els[i].getAttribute(\"checked\")\r\n\r\n          // }\r\n          e.target.checked = false\r\n          e.currentTarget.classList.remove('checked');\r\n          TestcaseData.updateTestcases(getresult)\r\n          setPercentage(initPercentage)\r\n      }\r\n  }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"main-content\">\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n            <p className=\"flex-grow\" style={{color: 'white'}}>Dashboard Reports</p>\r\n            <div className=\"row clearfix\">\r\n            <div className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\">\r\n            <Card type={getType.Pass} count={TestcaseData.Testcases.Pass} className='bg-light-green' Icon ={FaCheck}/>\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\">\r\n            <Card type={getType.Fail} count={TestcaseData.Testcases.Fail} className='bg-pink' Icon ={FaTimes} />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\">\r\n            <Card type={getType.Skip} count={TestcaseData.Testcases.Skip} className='bg-cyan' Icon ={FaExclamation} />\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n            <p className=\"card-title\">result Statistics</p>\r\n            <div className=\"row clearfix\">\r\n            <div className=\"col-lg-1 col-md-6 col-sm-6 col-xs-12\">\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-6 col-sm-6 col-xs-12\">\r\n            <Progress strokeWidth=\"10\"\r\n            sqSize=\"200\"\r\n            percentage={getPercentage.Pass} type='PASS'/>\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-6 col-sm-6 col-xs-12\">\r\n            <Progress strokeWidth=\"10\"\r\n            sqSize=\"200\"\r\n            percentage={getPercentage.Fail} type='FAIL'/>\r\n            </div>\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6 col-xs-12\">\r\n            <Progress strokeWidth=\"10\"\r\n            sqSize=\"200\"\r\n            percentage={getPercentage.Skip} type='SKIP'/>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n            <p className=\"card-title\">result overview</p>\r\n            <Reports reports={currentItems} toggleSelected={toggleSelected}/>\r\n            <Pagination postPerPage={itemPerPage} totalPosts={getReport.length} paginate={paginate}/>\r\n            </div>\r\n            \r\n      </div>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\ninterface IObject {\r\n    Fail: string,\r\n    Pass: string,\r\n    Skip: string\r\n}\r\n\r\nexport interface INumber {\r\n  Fail: number,\r\n  Pass: number,\r\n  Skip: number\r\n}\r\n\r\nexport interface IReport {\r\n  _id: string,\r\n  time: string,\r\n  suitename: string,\r\n  device: string,\r\n  notes: string,\r\n  FailedTestCases: number,\r\n  PassedTestCases: number,\r\n  RunType: string,\r\n  Regression: string,\r\n  SkippedTestCases: number,\r\n  TotalTestCases: number,\r\n  functionalReport: string,\r\n  uiReport: string,\r\n  version: string,\r\n  issues: string[],\r\n}\r\n","import React, { Component } from 'react'\r\nimport AppSidebar from './AppSidebar'\r\nimport logo from '../assets/img/logo.jpeg'\r\nimport '../App.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    ListGroupItemHeading,\r\n    ListGroupItemText,\r\n    Button,\r\n    Badge\r\n} from 'reactstrap'\r\nimport Dashboard from './Dashboard';\r\nimport InitialContext from '../context/InitialContext';\r\n\r\ninterface IProps{\r\n    userName: string;\r\n}\r\n\r\ninterface IState{\r\n    isActive : boolean;\r\n    activeCollection: string\r\n}\r\n\r\nclass AppNavbar extends Component<IProps, IState> {\r\n    static contextType = InitialContext;\r\n\r\n    constructor(props:IProps){\r\n        super(props);\r\n        this.state = {\r\n            isActive : false,\r\n            activeCollection: ''\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle = () =>{\r\n        this.setState({\r\n            isActive : !this.state.isActive\r\n        });\r\n    }\r\n\r\n   notify = (e: React.FormEvent<HTMLInputElement>, currentCollection:string) =>{\r\n        if(e.currentTarget.classList.value.includes('active')){\r\n            e.currentTarget.classList.remove('active')\r\n            this.setState({isActive : false,activeCollection:''}, () => {\r\n                this.context.updateSelected('')\r\n              }); \r\n        }\r\n        else{\r\n            var els = document.getElementsByClassName(\"active list-group-item\");\r\n            for (var i = 0; i < els.length; i++) {\r\n                els[i].classList.remove('active')\r\n            }\r\n            e.currentTarget.classList.add('active');\r\n            this.setState({isActive : true ,activeCollection:currentCollection}, () => {\r\n                this.context.updateSelected(currentCollection)\r\n              });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n             <div className=\"wrapper\">\r\n             <AppSidebar handleEvent={this.notify}/>\r\n             <Dashboard/> \r\n            </div>\r\n\r\n\r\n            <div className=\"content\">\r\n            <Navbar color= \"dark\" dark expand=\"lg\" className=\"fixed-top mb-5\">\r\n            <NavLink id=\"sidebarCollapse\" href=\"#\"><span className=\"navbar-toggler-icon\"></span></NavLink>\r\n            <a className=\"navbar-brand\" href=\"#\" style={{float:'left',marginLeft:'30px', fontSize:'40px',display: 'block',width: '250px'}}>\r\n            {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\" alt=\"\" style={{height:'50px', width:'100px',marginTop:'-10px'}} className=\"img-fluid flex-center\"></img>  */}\r\n            <span className=\"letter\" data-letter=\"C\">C</span>\r\n            <span className=\"letter\" data-letter=\"I\">I</span><span className=\"rest\">-Hub</span>\r\n             </a>\r\n            <div className=\"container\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"#\">Home\r\n                <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Services</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Contact</a>\r\n            </li>\r\n            </ul>\r\n            </div>\r\n            </div>\r\n            </Navbar>\r\n            </div>\r\n                    \r\n            <Navbar color= \"dark\" dark expand=\"lg\" className=\"sticky-bottom\">\r\n            <div className=\"container\">\r\n            <ul className=\"foote_bottom_ul_amrc\">\r\n            <li><a href=\"http://webenlance.com\">Home</a></li>\r\n            <li><a href=\"http://webenlance.com\">About</a></li>\r\n            <li><a href=\"http://webenlance.com\">Services</a></li>\r\n            <li><a href=\"http://webenlance.com\">Pricing</a></li>\r\n            <li><a href=\"http://webenlance.com\">Blog</a></li>\r\n            <li><a href=\"http://webenlance.com\">Contact</a></li>\r\n            </ul>\r\n            {/* <NavbarBrand href=\"/\">Home</NavbarBrand> */}\r\n            <p className=\"text-center\" style={{margin:'1rem', color:'black'}}>Copyright @2019 | Designed With by: <a href=\"#\">Ostan Dsouza</a></p>\r\n            <ul className=\"social_footer_ul\">\r\n            <li><a href=\"http://webenlance.com\"><i className=\"fa fa-facebook-f\"></i></a></li>\r\n            <li><a href=\"http://webenlance.com\"><i className=\"fa fa-twitter\"></i></a></li>\r\n            <li><a href=\"http://webenlance.com\"><i className=\"fa fa-linkedin\"></i></a></li>\r\n            <li><a href=\"http://webenlance.com\"><i className=\"fa fa-instagram\"></i></a></li>\r\n            </ul>\r\n            </div>\r\n            </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppNavbar\r\n","import React, {useState, createContext, useEffect} from 'react'\r\nimport InitialContext from './InitialContext'\r\nimport { useHttp, useGetHttp } from '../hooks/Http';\r\nimport { INumber } from '../components/Dashboard';\r\nimport axios from \"axios\";\r\n\r\ninterface IProps {\r\n    children: React.ReactNode,\r\n    // ConnectionString?: string,\r\n    // ConnectionStatus?: boolean,\r\n    // IssueMap?:[],\r\n    // Collections?:[],\r\n    // Selected: string\r\n}\r\n\r\nconst GlobalState: React.FC<IProps> = (props) => {\r\n    var collection:string\r\n    var url:string = \"mongodb://localhost:27017/react\"\r\n    // const [ConnectionStringAPI] = useHttp('/api/',{\"url\": \"mongodb://localhost:27017/react\"},[])\r\n    // const [IssueMapAPI] = useHttp('/api/read',{\"api\": \"IssueMap\"},[])\r\n    // const [ConnectionStatusAPI] = useGetHttp('/api/conn',[])\r\n    // const [CollectionsAPI] = useGetHttp('/api/list',[])\r\n\r\n    //const [ConnectionString, setConnectionString] = useState<string>('')\r\n    const [IssueMap, setIssueMap] = useState<never[]>([])\r\n    const [ConnectionStatus, setConnectionStatus] = useState<boolean>(false)\r\n    const [Collections, setCollections] = useState<never[]>([])\r\n    const [Selected, setSelected] = useState<string>('')\r\n    const [Testcases, setTestcases] = useState<INumber>({Fail:0, Pass:0, Skip:0})\r\n\r\n // const CollectionsMemo = useMemo(() => ({\r\n    //      Collections\r\n    //   }), [])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!ConnectionStatus){\r\n          console.log(\"ConnectionStatus failed\")\r\n            var conn:string;\r\n            const data = async() : Promise<any> =>{\r\n                    try {\r\n                        conn = await axios.get('/api/conn') \r\n                    } catch (e) {\r\n                        console.log(`Axios request failed: ${e}`);\r\n                    } \r\n                    return conn\r\n                };\r\n                data().then(res=>{\r\n                    console.log(\"data is called\",res.data.status)\r\n                    if(res.data.status !==\"Connection to the server was not successful\" || !res.data.status ){\r\n                    console.log(\"connection successful\")\r\n                    const other = async()=>{\r\n                      console.log(\"ConnectionStatus passed\")\r\n                      const lists =  await axios.get('/api/list') \r\n                      const conn = await axios.get('/api/conn') \r\n                      const issues = await axios.post('/api/read',{\"api\": \"IssueMap\"}) \r\n                      setCollections(lists.data.status)\r\n                      setConnectionStatus(conn.data.status)\r\n                      setIssueMap(issues.data.status[0])\r\n                  }\r\n                  other()\r\n                    }\r\n                    else{\r\n                    const connect = async(): Promise<any>=>{\r\n                        const connectionString = await axios.post('/api/',{\"url\": url}) \r\n                        return connectionString.data.status\r\n                    }\r\n                    connect().then(val=>{\r\n                      console.log(\"connectionString\",val)\r\n                      const other = async()=>{\r\n                          const lists =  await axios.get('/api/list') \r\n                          const conn = await axios.get('/api/conn') \r\n                          const issues = await axios.post('/api/read',{\"api\": \"IssueMap\"}) \r\n                          setCollections(lists.data.status)\r\n                          setConnectionStatus(conn.data.status)\r\n                          setIssueMap(issues.data.status[0])\r\n                      }\r\n                      other()\r\n                      console.log(\"connection failed\")\r\n                  })\r\n                  }\r\n              })\r\n            }\r\n    },[])\r\n\r\n    // useEffect(() => {\r\n    //     setConnectionString(ConnectionStringAPI.status)\r\n    // },[ConnectionStringAPI])\r\n\r\n    // useEffect(() => {\r\n        //console.log(\"IssueMapAPI.status\",IssueMapAPI.status)\r\n    //     setIssueMap(IssueMapAPI.status[0])\r\n    // },[IssueMapAPI])\r\n\r\n    // useEffect(() => {\r\n    //     setConnectionStatus(ConnectionStatusAPI.status)\r\n    // },[ConnectionStatusAPI])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setCollections(CollectionsAPI.status)\r\n    // },[CollectionsAPI])\r\n\r\n    useEffect(() => {\r\n        var newColl = [...Collections]\r\n        newColl.map((coll,index)=>{collection = coll as string\r\n            if(collection.startsWith(\"file\")||collection.startsWith(\"IssueMap\")){\r\n            newColl.splice(index,1)\r\n            setCollections(newColl)\r\n            }\r\n            })\r\n    },[Collections])\r\n\r\n\r\n    const updateValue = (data:any) => {\r\n        setIssueMap(data)\r\n     }\r\n\r\n     const updateSelected = (currentCollection:string) =>{\r\n        setSelected(currentCollection)\r\n     }\r\n\r\n     const updateTestcases = (testcases:INumber) =>{\r\n        setTestcases(testcases)\r\n     }\r\n\r\n    return (\r\n        <InitialContext.Provider value={{\r\n            //ConnectionString, \r\n            ConnectionStatus, \r\n            IssueMap, \r\n            Collections,\r\n            Selected,\r\n            Testcases,\r\n            updateValue,\r\n            updateSelected,\r\n            updateTestcases\r\n            }}>\r\n                {props.children}\r\n        </InitialContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalState\r\n\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css';\nimport AppNavbar from './components/AppNavbar'\nimport GlobalState from './context/GlobalState';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (  \n    <GlobalState>\n    <div className=\"App\">\n      <AppNavbar userName=\"Ostan\"/>\n    </div>\n    </GlobalState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}